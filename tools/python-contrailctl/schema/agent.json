{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Contrail controller configuration",
  "type": "object",
  "id": "root",
  "additionalProperties": false,
  "properties": {
    "GLOBAL": {
      "$ref": "definitions.json#/definitions/global_config"
    },
    "KEYSTONE": {
      "$ref": "definitions.json#/definitions/keystone_config"
    },
    "KUBERNETES": {
      "id": "kubernetes",
      "type": "object",
      "description": "KUBERNETES configuration section",
      "additionalProperties": false,
      "properties": {
        "api_server": {
          "description": "kubernetes api server ip",
          "type": "string"
        },
        "token": {
          "description": "aaa token to communicate to kubernetes api server ip",
          "type": "string"
        }
      }
    },
    "AGENT": {
      "id": "agent",
      "type": "object",
      "description": "AGENT configuration section",
      "additionalProperties": false,
      "properties": {
        "vrouter_physical_interface": {
          "description": "physical interface used by vhost interface",
          "type": "string"
        },
        "vrouter_physical_interface_detected": {
          "description": "physical interface used by vhost interface that is detected by agent container ansible code",
          "type": "string"
        },
        "ctrl_data_network": {
          "description": "Control data network(Optional)",
          "type": "string"
        },
        "ctrl_data_ip": {
          "description": "Control data ip provided (Optional)",
          "type": "string"
        },
        "compile_vrouter_module": {
          "description": "Whether to compile vrouter module or not",
          "type": "boolean"
        },
        "vrouter_agent_ip": {
          "description": "vrouter agent ip",
          "type": "string"
        },
        "non_mgmt_ip": {
          "description": "vrouter non mgmt interface ip",
          "type": "string"
        },
        "non_mgmt_gw": {
          "description": "vrouter non mgmt interface gw",
          "type": "string"
        },
        "gateway_mode": {
          "description": "agent gateway mode",
          "type": "string"
        },
        "qos_queue_id_list": {
          "description": "List of hardware queues id",
          "type": "array"
        },
        "qos_logical_queue_list": {
          "description": "qos logical queue mapping for a hw queue",
          "type": "array"
        },
        "qos_default_nic_queue": {
          "description": "qos default hw queue",
          "type": "boolean"
        },
        "qos_priority_tagging": {
          "description": "qos priority tagging knob",
          "type": "boolean"
        },
        "priority_id_list": {
          "description": "priority group id list",
          "type": "array"
        },
        "priority_scheduling_list": {
          "description": "priority group scheduling algo list",
          "type": "array"
        },
        "priority_bandwidth_list": {
          "description": "priority group bandwidth list",
          "type": "array"
        },
        "vgw_intf_list": {
          "description": "vgw intf list",
          "type": "array"
        },
        "vgw_public_subnet_list": {
          "description": "vgw public subnet list",
          "type": "array"
        },
        "vgw_public_vn_name_list": {
          "description": "vgw public vn name list",
          "type": "array"
        },
        "vgw_gateway_route_list": {
          "description": "vgw gateway route list",
          "type": "array"
        },
        "vrouter_module_params": {
          "description": "vrouter module params",
          "type": "string"
        },
        "compute_controller_list": {
          "description": "list of controller nodes",
          "type": "string"
        }
      }
    },
    "HYPERVISOR": {
      "id": "hypervisor",
      "type": "object",
      "description": "HYPERVISOR configuration section",
      "additionalProperties": false,
      "properties": {
        "type": {
          "description": "Type of hypervisor: kvm, xen, vmware. (optional)",
          "type": "string"
        }
      }
    }
  }
}
